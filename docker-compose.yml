version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: genetic_db
    environment:
      POSTGRES_DB: genetic_db
      POSTGRES_USER: genetic_user
      POSTGRES_PASSWORD: genetic_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U genetic_user -d genetic_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Genetic Disorder Detection API
  api:
    build: .
    container_name: genetic_api
    environment:
      - DATABASE_URL=postgresql://genetic_user:genetic_password@postgres:5432/genetic_db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: genetic_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data: 